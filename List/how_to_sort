# sorting a list
# by default in ascending
>>> names = ["jude", "augustine", "racheal"]
>>> 
>>> # no modification to the original list
... 
>>> sorted(names)
['augustine', 'jude', 'racheal']
>>> 
>>> names
['jude', 'augustine', 'racheal']
>>> 
>>> # modify the original list
... 
>>> names.sort()
>>> 
>>> names
['augustine', 'jude', 'racheal']
>>> 
# with number for descending
>>> ages = [ 23, 1, 34, 2 ,3 ,434]
>>> sorted(ages)
[1, 2, 3, 23, 34, 434]
>>> ages
[23, 1, 34, 2, 3, 434]
>>> sorted(ages, reverse=True)
[434, 34, 23, 3, 2, 1]
>>> 
"""
python is internally calling __cmp__
The return value is 0 for equal to,
1 for greater than, and -1 for less than the compared value.
"""
# sorting a list of list
# we want to sort by the first value of list of list
>>> def getKeyFirst(item):
...     return item[0]
... 
>>> l = [[2, 3], [6, 7], [3, 34], [24, 64], [1, 43]]
>>> 
>>> sorted(l, key=getKeyFirst)
[[1, 43], [2, 3], [3, 34], [6, 7], [24, 64]]
>>> 
>>> l
[[2, 3], [6, 7], [3, 34], [24, 64], [1, 43]]
# we want to sort by 2nd element of list of list
>>> l
[[2, 3], [6, 7], [3, 34], [24, 64], [1, 43]]
>>> l = [[2, 3], [6, 7], [3, 34], [24, 64], [1, 43]]
>>> 
>>> 
>>> def getKeySecond(item):
...     return item[1]
... 
>>> sorted(l, key=getKeySecond)
[[2, 3], [6, 7], [3, 34], [1, 43], [24, 64]]
>>> 
>>> sorted(l, key=getKeySecond, reverse=True)
[[24, 64], [1, 43], [3, 34], [6, 7], [2, 3]]
>>> 


